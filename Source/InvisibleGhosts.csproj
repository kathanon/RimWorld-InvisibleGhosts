<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <ModName>InvisibleGhosts</ModName>
    <ModId>kathanon.$(ModName)</ModId>
    <MultiVersion>true</MultiVersion>
    <NuGetPackageImportStamp>
    </NuGetPackageImportStamp>
  </PropertyGroup>
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Release</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{C3D05270-E773-4067-AEA9-DABE789AF1BC}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <FileAlignment>512</FileAlignment>
    <TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion>
    <TargetFrameworkProfile />
    <LangVersion>12.0</LangVersion>
  </PropertyGroup>
  <!-- Import base build file -->
  <Import Project="RimWorld.targets" />
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>none</DebugType>
    <Optimize>true</Optimize>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <ItemGroup>
    <!-- RimWorld DLLs -->
    <Reference Include="Assembly-CSharp" Private="False">
      <HintPath>$(RimWorldDlls)\Assembly-CSharp.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.CoreModule" Private="False">
      <HintPath>$(RimWorldDlls)\UnityEngine.CoreModule.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.IMGUIModule" Private="False">
      <HintPath>$(RimWorldDlls)\UnityEngine.IMGUIModule.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.TextRenderingModule" Private="False">
      <HintPath>$(RimWorldDlls)\UnityEngine.TextRenderingModule.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.UI" Private="False">
      <HintPath>$(RimWorldDlls)\UnityEngine.UI.dll</HintPath>
    </Reference>
    <!-- Mod Dlls -->
    <Reference Include="0Harmony" Private="False">
      <HintPath>$(HarmonyPath)</HintPath>
    </Reference>
    <!-- Other Dlls -->
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="System.Data" />
    <Reference Include="System.Xml" />
  </ItemGroup>
  <!-- Project files -->
  <ItemGroup>
    <Compile Include="AddToggle_Patch.cs" />
    <Compile Include="BlockInteractions_Patches.cs" />
    <Compile Include="DetectPlacing_Patches.cs" />
    <Compile Include="Hotkey_Patch.cs" />
    <Compile Include="Options.cs" />
    <Compile Include="Resources.cs" />
    <Compile Include="Main.cs" />
    <Compile Include="Strings.cs" />
    <Compile Include="HideGhosts_Patches.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="UpdateMapMesh_Patch.cs" />
    <Compile Include="Util.cs" />
  </ItemGroup>
  <!-- Include ModFiles -->
  <ItemGroup>
    <None Include="$(ModFiles)\**" CopyToOutputDirectory="PreserveNewest">
      <Link>%(RecursiveDir)%(Filename)%(Extension)</Link>
    </None>
    <None Include="packages.config" />
  </ItemGroup>
  <!-- Use PolySharp to enable runtime-agnostic language features -->
  <Import Project="..\packages\PolySharp.1.10.0\build\PolySharp.targets" Condition="Exists('..\packages\PolySharp.1.10.0\build\PolySharp.targets')" />
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('..\packages\PolySharp.1.10.0\build\PolySharp.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\PolySharp.1.10.0\build\PolySharp.targets'))" />
  </Target>
</Project>
